{
	"glsl" : "#version 410 core\nlayout (location = 0) out vec3 gPos;\nlayout (location = 1) out vec3 gNorm;\nlayout (location = 2) out vec4 gAlbedo;\nlayout (location = 3) out float gSpec;\nlayout (location = 4) out float gShadow;\nlayout (location = 5) out vec3 gMetRoughAO;\n\nin vec3 Normal;\nin vec3 Tan;\nin vec3 Bitan;\n\nin vec3 FragPos;\nin vec2 UVcoord;\n\nin vec4 FragPosLightSpace[10];\n\nuniform sampler2D ShadowMap[10];\nuniform int NbrDirLights;\n\nuniform sampler2D tex4;\nvec3 GetNormFromMap(vec3 NMap, vec3 n, vec3 FPos, vec2 UV) {\n    vec3 tanNorm = NMap * 2.0 - 1.0;\n    \n    vec3 Q1 = dFdx(FPos);\n    vec3 Q2 = dFdy(FPos);\n    vec2 st1 = dFdx(UV);\n    vec2 st2 = dFdy(UV);\n    \n    vec3 Nm = normalize(n);\n    vec3 T = normalize(Q1 * st2.t - Q2 * st1.t);\n    vec3 B = -normalize(cross(Nm, T));\n    mat3 TBN = mat3(T, B, Nm);\n\n    return normalize(TBN * tanNorm);\n}\nuniform sampler2D tex7;\nuniform sampler2D tex8;\nuniform sampler2D tex9;\nfloat ProcessShadows() {\n\tfloat finalShadow = 0.0;\n\n\tfor(int i = 0; i < NbrDirLights; i++) {\n\t\tvec3 projCoords = FragPosLightSpace[i].xyz / FragPosLightSpace[i].w;\n\t\tprojCoords = projCoords * 0.5 + 0.5;\n\n\t\tif(projCoords.z > 1.0) {\n\t\t\treturn 0.0;\n\t\t}\n\n\t\tfloat closestDepth = texture(ShadowMap[i], projCoords.xy).r;\n\t\tfloat currentDepth = projCoords.z;\n\n\t\tfloat bias = 0.0015;\n\n\t\tfloat shadow = 0.0;\n\n\t\tvec2 texelSize = 1.0 / textureSize(ShadowMap[i], 0);\n\t\tfor(int x = -1; x <= 1; x++) {\n\t\t\tfor(int y = -1; y <= 1; y++) {\n\t\t\t\tfloat pcfDepth = texture(ShadowMap[i], projCoords.xy + vec2(x, y) * texelSize).r;\n\t\t\t\tshadow += currentDepth - bias > pcfDepth ? 1.0 : 0.0;\n\t\t\t}\n\t\t}\n\n\t\tfinalShadow += shadow / 9;\n\t}\n\n\treturn finalShadow;\n}\nvoid main() {\ngAlbedo = vec4(texture(tex7,UVcoord).rgb, 0.0);\ngPos = FragPos;\ngNorm = GetNormFromMap(texture(tex4,UVcoord).rgb,Normal,FragPos,UVcoord);\ngSpec = 0.0;\ngMetRoughAO = vec3(texture(tex8,UVcoord).r,texture(tex9,UVcoord).r,0.0);\ngShadow = ((1.000000)-ProcessShadows());\n}",
	"textures" : 
	[
		{
			"param" : "tex4",
			"path" : "Content/textures/metal_norm.jpg"
		},
		{
			"param" : "tex7",
			"path" : "Content/textures/metal_diff.jpg"
		},
		{
			"param" : "tex8",
			"path" : "Content/textures/metal_metal.jpg"
		},
		{
			"param" : "tex9",
			"path" : "Content/textures/metal_rough.jpg"
		}
	]
}