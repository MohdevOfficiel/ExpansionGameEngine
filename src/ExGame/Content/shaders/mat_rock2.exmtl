{
	"glsl" : "#version 410 core\nlayout (location = 0) out vec3 gPos;\nlayout (location = 1) out vec3 gNorm;\nlayout (location = 2) out vec4 gAlbedo;\nlayout (location = 3) out float gSpec;\nlayout (location = 4) out vec3 gMetRoughAO;\nlayout (location = 5) out vec3 gEmissive;\n\nin vec3 Normal;\nin vec3 Tan;\nin vec3 Bitan;\n\nin vec3 FragPos;\nin vec2 UVcoord;\n\nuniform sampler2D tex4;\nvec3 GetNormFromMap(vec3 NMap, vec3 n, vec3 FPos, vec2 UV) {\n    vec3 tanNorm = NMap * 2.0 - 1.0;\n    \n    vec3 Q1 = dFdx(FPos);\n    vec3 Q2 = dFdy(FPos);\n    vec2 st1 = dFdx(UV);\n    vec2 st2 = dFdy(UV);\n    \n    vec3 Nm = normalize(n);\n    vec3 T = normalize(Q1 * st2.t - Q2 * st1.t);\n    vec3 B = -normalize(cross(Nm, T));\n    mat3 TBN = mat3(T, B, Nm);\n\n    return normalize(TBN * tanNorm);\n}\nuniform sampler2D tex7;\nuniform sampler2D tex8;\nuniform sampler2D tex10;\nvoid main() {\ngAlbedo = vec4(texture(tex4,UVcoord).rgb, 0.0);\ngPos = FragPos;\ngNorm = GetNormFromMap(texture(tex7,UVcoord).rgb,Normal,FragPos,UVcoord);\ngSpec = 0.0;\ngMetRoughAO = vec3(0.0,texture(tex8,UVcoord).r,texture(tex10,UVcoord).r);\ngEmissive = vec3(0.0, 0.0, 0.0);\n}",
	"textures" : 
	[
		{
			"param" : "tex4",
			"path" : "Content/textures/rock2_color.jpg"
		},
		{
			"param" : "tex7",
			"path" : "Content/textures/rock2_norm.jpg"
		},
		{
			"param" : "tex8",
			"path" : "Content/textures/rock2_rough.jpg"
		},
		{
			"param" : "tex10",
			"path" : "Content/textures/rock2_ao.jpg"
		}
	]
}